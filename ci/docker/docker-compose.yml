version: '3.7'
services:
  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: "broker,controller"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:29093"
      KAFKA_LISTENERS: "PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092"
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"
      KAFKA_LOG_RETENTION_MS: "604800" #7 days
      KAFKA_LOG_CLEANUP_POLICY: "compact"
      KAFKA_LOG_SEGMENT_MS: "86400000" # 1 day
      KAFKA_LOG_SEGMENT_BYTES: "1073741824" # 1 GB
      KAFKA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - power_eda_stack-dev-profile-kafka:/var/lib/kafka
    networks:
      - power_eda_stack-network
    restart: always

  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    volumes:
      - power_eda_stack-dev-profile-schema-registry:/var/lib/schema-registry
    networks:
      - power_eda_stack-network
    restart: always

  debezium-connect:
    image: quay.io/debezium/connect:latest
    depends_on:
      - mysql
      - kafka
    ports:
      - "8083:8083"
    environment:
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
      BOOTSTRAP_SERVERS: kafka:29092
      HEAP_OPTS: "-Xmx512m -Xms512m"  # maximum heap size to 512 MB
    volumes:
      - ./kafka/connect/connectors/debezium-mysql-connector-conf.json:/debezium-mysql-connector-conf.json
      - ./kafka/connect/connectors/plugin:/kafka/connect/connectors/custom-plugins
    networks:
      - power_eda_stack-network
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin", "-u","barcelona","-pbarcelona","ping", "-h", "localhost" ]
      timeout: 5s
      retries: 1000

  curl:
    image: curlimages/curl:latest
    volumes:
      - ./kafka/connect/connectors/debezium-mysql-connector-conf.json:/debezium-mysql-connector-conf.json
      - ./curl/retry_success.sh:/retry_success.sh
    command:
      - /bin/sh
      - /retry_success.sh
    depends_on:
      - debezium-connect
    networks:
      - power_eda_stack-network


  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    command: [ "--kafka.server=kafka:29092" ]
    ports:
      - 9308:9308
    depends_on:
      - kafka
    networks:
      - power_eda_stack-network
    restart: always

  ##for dev purposes only
  akhq:
    image: tchiotludo/akhq:latest
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"
              schema-registry:
                url: "http://schema-registry:8081"
              connect:
                - name: "default-connect"
                  url: "http://debezium-connect:8083"
      restart: always
    ports:
      - 8089:8080
    links:
      - kafka
      - schema-registry
    networks:
      - power_eda_stack-network

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: power_eda_stack
      MYSQL_USER: power_eda_stack
      MYSQL_PASSWORD: power_eda_stack
      MYSQL_LOG_BIN: 1
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
      - power_eda_stack-dev-profile-mysql:/var/lib/mysql
    networks:
      - power_eda_stack-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "-u","power_eda_stack","-ppower_eda_stack","ping", "-h", "localhost" ]
      timeout: 5s
      retries: 1000
    restart: always

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
      - power_eda_stack-dev-profile-prometheus:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus-config.yml
      - --storage.tsdb.retention.time=7d
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - power_eda_stack-network
    restart: always

  ## enable when needed
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/etc/grafana/provisioning
      - power_eda_stack-dev-profile-grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=barcelona
    depends_on:
      - prometheus
    networks:
      - power_eda_stack-network
    restart: always

  promtail:
    image: grafana/promtail:latest
    command: -config.file=/etc/promtail/promtail-config.yml
    volumes:
      - ${LOGS}:/var/log
      - ./promtail/promtail-config.yml:/etc/promtail/promtail-config.yml
      - power_eda_stack-dev-profile-promtail:/tmp/positions
    networks:
      - power_eda_stack-network
    restart: always

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
      - "9096:9096"
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./loki/loki-config.yaml:/etc/loki/loki-config.yaml
      - power_eda_stack-dev-profile-loki:/data/loki
    networks:
      - power_eda_stack-network
    restart: always

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: [ "start","--db","mysql","--db-url", "jdbc:mysql://mysql:3306/keycloak","--db-username","power_eda_stack","--db-password","power_eda_stack","--import-realm","--hostname","${KEYCLOAK_HOST}", "--https-certificate-file=/opt/keycloak/pem/keycloak-certfile.pem","--https-certificate-key-file=/opt/keycloak/pem/keycloak-keyfile.pem" ]
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=barcelona
    ports:
      - "8080:8080"
      - "8443:8443"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./keycloak/power_eda_stack-realm.json:/opt/keycloak/data/import/power_eda_stack-realm.json
      - ./keycloak/pem:/opt/keycloak/pem
    networks:
      - power_eda_stack-network



  #only needed to create the api from open api documentation
  #  openapi-generator:
  #    image: openapitools/openapi-generator-cli:latest
  #    volumes:
  #      - ../../src/main/resources/openapi:/local
  #      - ../../src/main/java/generated/rest:/local/java-client
  #    command: generate -g java -i /local/order/create-order-request-endpoint.yaml -o /local/java-client

networks:
  power_eda_stack-network:

volumes:
  power_eda_stack-dev-profile-kafka:
  power_eda_stack-dev-profile-schema-registry:
  power_eda_stack-dev-profile-mysql:
  power_eda_stack-dev-profile-prometheus:
  power_eda_stack-dev-profile-grafana:
  power_eda_stack-dev-profile-loki:
  power_eda_stack-dev-profile-promtail:







